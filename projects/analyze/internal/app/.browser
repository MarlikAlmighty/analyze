package app

import (
	"context"
	"github.com/chromedp/chromedp"
	"log"
	"time"
)

func (core *Core) browser(opts []chromedp.ExecAllocatorOption, url string) (string, error) {
	allocCtx, cancelAlloc := chromedp.NewExecAllocator(context.Background(), opts...)
	defer cancelAlloc()
	taskCtx, cancelTask := chromedp.NewContext(allocCtx, chromedp.WithLogf(log.Printf))
	defer cancelTask()
	ctx, cancel := context.WithTimeout(taskCtx, 2*time.Minute)
	defer cancel()
	var html string
	if err := chromedp.Run(ctx,
		chromedp.Navigate(url),
		chromedp.OuterHTML("html", &html, chromedp.ByQuery)); err != nil {
		return "", err
	}
	return html, nil
}
