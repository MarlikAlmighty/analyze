package sort

import (
	"regexp"
	"strings"
)

// FindWords find in text a key words
func FindWords(title, body string) string {

	var whatWords = "гибдд угибдд дпс пдд мчс мвд фсб умвд м5 м6 " +
		"инспектор автоинспектор полицейски полици пристав приговор " +
		"суд осуд осуж уголовн оштрафо арест дтп авари столкновени " +
		"столкнул врезал протаранил протаранивш притё опрокинул " +
		"опрокидыв перевернул провали перелет улёт улет влете обрушивш " +
		"рухнул снёс снес въехал падени упа сбил сби расстерзал разорвал " +
		"оборва загрыз прорвал бомб снаряд оружи боеприпа мин укус рейд " +
		"взрыв взорвал убий гибел убил зареза скончал борьб драк побоищ " +
		"расстреля подрал нарко пожар загорел сгорел возгоран горит горел " +
		"тело труп мёртвы мёртво мертво мертве умер поги гибел гибн " +
		"смертельн пропал упал выпа эвакуа утону утоп смыл затопил сгоре " +
		"ограб грабит разбой разбойни мошенн обманул фальшив кража укра " +
		"пропажа пропа угон обго угнал ищут поиск розыск разыскива отрави " +
		"вскры взлома насил изнасил бешенств взятк суд коррупци беспредел " +
		"напал нападени разборк преследова сбежав сбежал протест забастовк " +
		"бастовал бунт такс пострада подозрит проституц проститут погода " +
		"дождь гроза ветер туман опасност заморозки похолода циклон урага " +
		"снег синопти холод футбол хоккей хоккеи игрок нетрезв пьян рязан "

	Title := strings.Fields(title)
	Body := strings.Fields(body)
	What := strings.Fields(whatWords)
	reg := regexp.MustCompile(`[а-яА-Я]{1,6}`)

	for _, what := range What {
		for _, title := range Title {
			for _, body := range Body {
				if strings.EqualFold(reg.FindString(strings.ToLower(what)), reg.FindString(strings.ToLower(title))) ||
					strings.EqualFold(reg.FindString(strings.ToLower(what)), reg.FindString(strings.ToLower(body))) {
					return what
				}
			}
		}
	}
	return ""
}
